{
  "version": 3,
  "sources": ["Search.svelte"],
  "sourcesContent": ["<script>\n  import { onMount } from \"svelte\";\n  import algoliasearch from \"algoliasearch/lite\";\n\n  // import Pagination from './Pagination.svelte';\n\n  let searchClient;\n  let index;\n  let totalPages;\n\n  // let query = '';\n  const urlParams = new URLSearchParams(window.location.search);\n  // const hasQuery = urlParams.has('query');\n  const hasQuery = urlParams.get(\"query\");\n\n  let query = hasQuery ? hasQuery : \"\";\n  let hits = [];\n  // let count = ''\n\n  onMount(() => {\n    searchClient = algoliasearch(\n      \"89SU3XUZTF\",\n      \"8bc3f81984b0e8c86255abe7944e8b17\"\n    );\n\n    index = searchClient.initIndex(\"dynamichvac_blog_posts\");\n\n    // Warm up search\n    index.search(query).then(console.log);\n\n    if (hasQuery) {\n      search(hasQuery, 0);\n    }\n  });\n\n  // Fires on each keyup in form -- original * defunct\n  // Searches on submit of search form input\n  async function search(query, p) {\n    const pageCount = await index.search(query);\n    // const p = setPage(page,result.nbPages)\n    totalPages = pageCount.nbPages;\n\n    const result = await index.search(query, { page: p });\n\n    hits = result.hits;\n    page = p;\n\n    console.log(\"Hits: \" + result.nbPages);\n    console.log(\"Page: \" + page);\n  }\n\n  // let rows = [];\n  let page = 0;\n  // let totalPages = [];\n\n  // const setPage = (p,pages) => {\n  // \tif (p >= 0 && p <script pages) {\n  // \t\tpage = p;\n  // \t}\n  // }\n  function sluggify (str) {\n    str = str.replace(/^\\s+|\\s+$/g, ''); // trim\n    str = str.toLowerCase();\n  \n    str = str.replace(/[^a-z0-9 -]/g, '') // remove invalid chars\n        .replace(/\\s+/g, '-') // collapse whitespace and replace by -\n        .replace(/-+/g, '-'); // collapse dashes\n\n    return str;\n  }\n</script>\n\n<p>Here are the search results for <strong>{query}</strong></p>\n<!-- <p>{count} search results</p> -->\n<nav class=\"pagination\">\n  <ul>\n    <li>\n      {#if page > 0}\n        <button\n          type=\"button\"\n          class=\"btn-next-prev\"\n          on:click={() => search(query, page - 1)}\n        >\n          PREV\n        </button>\n      {:else}\n        <button type=\"button\" class=\"btn-next-prev\" disabled> PREV </button>\n      {/if}\n    </li>\n\n    {#each { length: totalPages } as _, page}\n      <li>\n        <button\n          type=\"button\"\n          class=\"btn-page-number\"\n          on:click={() => search(query, page)}\n        >\n          {page + 1}\n        </button>\n      </li>\n    {/each}\n\n    <li>\n      {#if page < totalPages - 1}\n        <button\n          type=\"button\"\n          class=\"btn-next-prev\"\n          on:click={() => search(query, page + 1)}\n        >\n          NEXT\n        </button>\n      {/if}\n    </li>\n  </ul>\n</nav>\n\n{#each hits as hit}\n  <!-- <img src={hit.avatar} alt={hit.username}> -->\n  <div class=\"post\" style=\"padding-bottom: 2rem; border-bottom:1px dotted #cecece\">\n    <!-- <h2><a href=\"{hit.url}\">{hit.title}</a></h2> -->\n    <h2><a href=\"/blog/{sluggify(hit.title)}\">{hit.title}</a></h2>\n    <!-- <p>{hit.bio}</p> -->\n\n    <p contenteditable bind:innerHTML={hit.excerpt} />\n\n    <p class=\"postmetadata\" style=\"color: #CECECE; margin:4rem 0 0 0;font-size: 1rem\">\n      Tags:\n      {#each hit.tags as tag}\n        <a href=\"/tag/{sluggify(tag)}/\" rel=\"tag\" style=\"background: #cecece; color: #fff; padding: 4px 6px; border-radius: 4px; margin-left: 4px\">{tag}</a>\n      {/each}    \n    </p>\n  </div>\n{/each}\n\n<style>\n  ul {\n    display: flex;\n    gap: 0.3rem;\n    margin: 0\n  }\n  li {\n    list-style-type: none;\n  }\n  button:disabled {\n    background-color: #ccc;\n    cursor: default;\n  }\n\n  button {\n    padding: 4px 10px;\n    border-radius: 4px;\n  }\n  .postmetadata a {\n    margin-left: .5rem\n  }\n</style>\n"],
  "mappings": ";AAuIE,EAAA,CAAA,aAAA,CAAA;AACE,WAAS;AACT,OAAK;AACL,UAAQ;AACV;AACA,EAAA,CAAA,aAAA,CAAA;AACE,mBAAiB;AACnB;AACA,MAAA,CAAA,aAAA,CAAA,aAAM;AACJ,oBAAkB;AAClB,UAAQ;AACV;AAEA,MAAA,CAAA,aAAA,CAAA;AACE,WAAS,IAAI;AACb,iBAAe;AACjB;AACA,CAAA,YAAA,CAAA,cAAc,CAAA,CAAA;AACZ,eAAa;AACf;",
  "names": []
}
